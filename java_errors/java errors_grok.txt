auth.java:7: error: class AuthApplication is public, should be declared in a file named AuthApplication.java
public class AuthApplication {
       ^
authcontroller.java:20: error: class AuthController is public, should be declared in a file named AuthController.java
public class AuthController {
       ^
config.java:18: error: class JwtAuthenticationFilter is public, should be declared in a file named JwtAuthenticationFilter.java
public class JwtAuthenticationFilter extends OncePerRequestFilter {
       ^
exception.java:3: error: class CustomException is public, should be declared in a file named CustomException.java
public class CustomException extends RuntimeException {
       ^
jst.java:11: error: class JwtService is public, should be declared in a file named JwtService.java
public class JwtService {
       ^
loginrequest.java:6: error: class LoginRequest is public, should be declared in a file named LoginRequest.java
public class LoginRequest {
       ^
repo.java:7: error: interface UserRepository is public, should be declared in a file named UserRepository.java
public interface UserRepository extends JpaRepository<User, Long> {
       ^
request.java:7: error: class RegisterRequest is public, should be declared in a file named RegisterRequest.java
public class RegisterRequest {
       ^
response.java:3: error: class UserResponse is public, should be declared in a file named UserResponse.java
public class UserResponse {
       ^
service.java:20: error: class UserService is public, should be declared in a file named UserService.java
public class UserService {
       ^
user.java:9: error: class User is public, should be declared in a file named User.java
public class User {
       ^
auth.java:3: error: package org.springframework.boot does not exist
import org.springframework.boot.SpringApplication;
                               ^
auth.java:4: error: package org.springframework.boot.autoconfigure does not exist
import org.springframework.boot.autoconfigure.SpringBootApplication;
                                             ^
auth.java:6: error: cannot find symbol
@SpringBootApplication
 ^
  symbol: class SpringBootApplication
authcontroller.java:10: error: package jakarta.validation does not exist
import jakarta.validation.Valid;
                         ^
authcontroller.java:11: error: package org.springframework.beans.factory.annotation does not exist
import org.springframework.beans.factory.annotation.Autowired;
                                                   ^
authcontroller.java:12: error: package org.springframework.http does not exist
import org.springframework.http.ResponseEntity;
                               ^
authcontroller.java:13: error: package org.springframework.security.crypto.bcrypt does not exist
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
                                                 ^
authcontroller.java:18: error: cannot find symbol
@RestController
 ^
  symbol: class RestController
authcontroller.java:19: error: cannot find symbol
@RequestMapping("/api/auth")
 ^
  symbol: class RequestMapping
service.java:8: error: package org.springframework.beans.factory.annotation does not exist
import org.springframework.beans.factory.annotation.Autowired;
                                                   ^
service.java:9: error: package org.springframework.security.crypto.bcrypt does not exist
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
                                                 ^
service.java:10: error: package org.springframework.stereotype does not exist
import org.springframework.stereotype.Service;
                                     ^
service.java:11: error: package org.springframework.web.multipart does not exist
import org.springframework.web.multipart.MultipartFile;
                                        ^
service.java:19: error: cannot find symbol
@Service
 ^
  symbol: class Service
jst.java:3: error: package io.jsonwebtoken does not exist
import io.jsonwebtoken.Jwts;
                      ^
jst.java:4: error: package io.jsonwebtoken does not exist
import io.jsonwebtoken.SignatureAlgorithm;
                      ^
jst.java:5: error: package org.springframework.beans.factory.annotation does not exist
import org.springframework.beans.factory.annotation.Value;
                                                   ^
jst.java:6: error: package org.springframework.stereotype does not exist
import org.springframework.stereotype.Service;
                                     ^
jst.java:10: error: cannot find symbol
@Service
 ^
  symbol: class Service
authcontroller.java:26: error: cannot find symbol
    private BCryptPasswordEncoder passwordEncoder;
            ^
  symbol:   class BCryptPasswordEncoder
  location: class AuthController
request.java:3: error: package jakarta.validation.constraints does not exist
import jakarta.validation.constraints.Email;
                                     ^
request.java:4: error: package jakarta.validation.constraints does not exist
import jakarta.validation.constraints.NotBlank;
                                     ^
request.java:5: error: package org.springframework.web.multipart does not exist
import org.springframework.web.multipart.MultipartFile;
                                        ^
authcontroller.java:29: error: cannot find symbol
    public ResponseEntity<?> register(@Valid @ModelAttribute RegisterRequest request) {
           ^
  symbol:   class ResponseEntity
  location: class AuthController
loginrequest.java:3: error: package jakarta.validation.constraints does not exist
import jakarta.validation.constraints.Email;
                                     ^
loginrequest.java:4: error: package jakarta.validation.constraints does not exist
import jakarta.validation.constraints.NotBlank;
                                     ^
authcontroller.java:35: error: cannot find symbol
    public ResponseEntity<?> login(@Valid @RequestBody LoginRequest request) {
           ^
  symbol:   class ResponseEntity
  location: class AuthController
authcontroller.java:46: error: cannot find symbol
    public ResponseEntity<UserResponse> getUser(Principal principal) {
           ^
  symbol:   class ResponseEntity
  location: class AuthController
request.java:15: error: cannot find symbol
    private MultipartFile profileImage;
            ^
  symbol:   class MultipartFile
  location: class RegisterRequest
request.java:26: error: cannot find symbol
    public MultipartFile getProfileImage() { return profileImage; }
           ^
  symbol:   class MultipartFile
  location: class RegisterRequest
request.java:27: error: cannot find symbol
    public void setProfileImage(MultipartFile profileImage) { this.profileImage = profileImage; }
                                ^
  symbol:   class MultipartFile
  location: class RegisterRequest
repo.java:4: error: package org.springframework.data.jpa.repository does not exist
import org.springframework.data.jpa.repository.JpaRepository;
                                              ^
repo.java:7: error: cannot find symbol
public interface UserRepository extends JpaRepository<User, Long> {
                                        ^
  symbol: class JpaRepository
user.java:3: error: package jakarta.persistence does not exist
import jakarta.persistence.Entity;
                          ^
user.java:4: error: package jakarta.persistence does not exist
import jakarta.persistence.GeneratedValue;
                          ^
user.java:5: error: package jakarta.persistence does not exist
import jakarta.persistence.GenerationType;
                          ^
user.java:6: error: package jakarta.persistence does not exist
import jakarta.persistence.Id;
                          ^
user.java:8: error: cannot find symbol
@Entity
 ^
  symbol: class Entity
service.java:24: error: cannot find symbol
    private BCryptPasswordEncoder passwordEncoder;
            ^
  symbol:   class BCryptPasswordEncoder
  location: class UserService
authcontroller.java:14: error: package org.springframework.web.bind.annotation does not exist
import org.springframework.web.bind.annotation.*;
^
config.java:4: error: package jakarta.servlet does not exist
import jakarta.servlet.FilterChain;
                      ^
config.java:5: error: package jakarta.servlet does not exist
import jakarta.servlet.ServletException;
                      ^
config.java:6: error: package jakarta.servlet.http does not exist
import jakarta.servlet.http.HttpServletRequest;
                           ^
config.java:7: error: package jakarta.servlet.http does not exist
import jakarta.servlet.http.HttpServletResponse;
                           ^
config.java:8: error: package org.springframework.beans.factory.annotation does not exist
import org.springframework.beans.factory.annotation.Autowired;
                                                   ^
config.java:9: error: package org.springframework.security.authentication does not exist
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
                                                  ^
config.java:10: error: package org.springframework.security.core.context does not exist
import org.springframework.security.core.context.SecurityContextHolder;
                                                ^
config.java:11: error: package org.springframework.security.web.authentication does not exist
import org.springframework.security.web.authentication.WebAuthenticationDetailsSource;
                                                      ^
config.java:12: error: package org.springframework.stereotype does not exist
import org.springframework.stereotype.Component;
                                     ^
config.java:13: error: package org.springframework.web.filter does not exist
import org.springframework.web.filter.OncePerRequestFilter;
                                     ^
config.java:18: error: cannot find symbol
public class JwtAuthenticationFilter extends OncePerRequestFilter {
                                             ^
  symbol: class OncePerRequestFilter
config.java:17: error: cannot find symbol
@Component
 ^
  symbol: class Component
config.java:23: error: cannot find symbol
    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)
                                    ^
  symbol:   class HttpServletRequest
  location: class JwtAuthenticationFilter
config.java:23: error: cannot find symbol
    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)
                                                                ^
  symbol:   class HttpServletResponse
  location: class JwtAuthenticationFilter
config.java:23: error: cannot find symbol
    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)
                                                                                              ^
  symbol:   class FilterChain
  location: class JwtAuthenticationFilter
config.java:24: error: cannot find symbol
            throws ServletException, IOException {
                   ^
  symbol:   class ServletException
  location: class JwtAuthenticationFilter
authcontroller.java:21: error: cannot find symbol
    @Autowired
     ^
  symbol:   class Autowired
  location: class AuthController
authcontroller.java:23: error: cannot find symbol
    @Autowired
     ^
  symbol:   class Autowired
  location: class AuthController
authcontroller.java:25: error: cannot find symbol
    @Autowired
     ^
  symbol:   class Autowired
  location: class AuthController
authcontroller.java:29: error: cannot find symbol
    public ResponseEntity<?> register(@Valid @ModelAttribute RegisterRequest request) {
                                       ^
  symbol:   class Valid
  location: class AuthController
authcontroller.java:29: error: cannot find symbol
    public ResponseEntity<?> register(@Valid @ModelAttribute RegisterRequest request) {
                                              ^
  symbol:   class ModelAttribute
  location: class AuthController
authcontroller.java:28: error: cannot find symbol
    @PostMapping("/register")
     ^
  symbol:   class PostMapping
  location: class AuthController
authcontroller.java:35: error: cannot find symbol
    public ResponseEntity<?> login(@Valid @RequestBody LoginRequest request) {
                                    ^
  symbol:   class Valid
  location: class AuthController
authcontroller.java:35: error: cannot find symbol
    public ResponseEntity<?> login(@Valid @RequestBody LoginRequest request) {
                                           ^
  symbol:   class RequestBody
  location: class AuthController
authcontroller.java:34: error: cannot find symbol
    @PostMapping("/login")
     ^
  symbol:   class PostMapping
  location: class AuthController
authcontroller.java:45: error: cannot find symbol
    @GetMapping("/dashboard")
     ^
  symbol:   class GetMapping
  location: class AuthController
loginrequest.java:7: error: cannot find symbol
    @NotBlank(message = "Email is required")
     ^
  symbol:   class NotBlank
  location: class LoginRequest
loginrequest.java:8: error: cannot find symbol
    @Email(message = "Invalid email format")
     ^
  symbol:   class Email
  location: class LoginRequest
loginrequest.java:10: error: cannot find symbol
    @NotBlank(message = "Password is required")
     ^
  symbol:   class NotBlank
  location: class LoginRequest
request.java:8: error: cannot find symbol
    @NotBlank(message = "Email is required")
     ^
  symbol:   class NotBlank
  location: class RegisterRequest
request.java:9: error: cannot find symbol
    @Email(message = "Invalid email format")
     ^
  symbol:   class Email
  location: class RegisterRequest
request.java:11: error: cannot find symbol
    @NotBlank(message = "Password is required")
     ^
  symbol:   class NotBlank
  location: class RegisterRequest
jst.java:12: error: cannot find symbol
    @Value("${JWT_SECRET}")
     ^
  symbol:   class Value
  location: class JwtService
service.java:21: error: cannot find symbol
    @Autowired
     ^
  symbol:   class Autowired
  location: class UserService
service.java:23: error: cannot find symbol
    @Autowired
     ^
  symbol:   class Autowired
  location: class UserService
user.java:10: error: cannot find symbol
    @Id
     ^
  symbol:   class Id
  location: class User
user.java:11: error: cannot find symbol
    @GeneratedValue(strategy = GenerationType.IDENTITY)
     ^
  symbol:   class GeneratedValue
  location: class User
user.java:11: error: cannot find symbol
    @GeneratedValue(strategy = GenerationType.IDENTITY)
                               ^
  symbol:   variable GenerationType
  location: class User
config.java:19: error: cannot find symbol
    @Autowired
     ^
  symbol:   class Autowired
  location: class JwtAuthenticationFilter
auth.java:9: error: cannot find symbol
        SpringApplication.run(AuthApplication.class, args);
        ^
  symbol:   variable SpringApplication
  location: class AuthApplication
authcontroller.java:31: error: cannot find symbol
        return ResponseEntity.status(201).body("User registered successfully");
               ^
  symbol:   variable ResponseEntity
  location: class AuthController
authcontroller.java:42: error: cannot find symbol
        return ResponseEntity.ok(new JwtResponse(token));
               ^
  symbol:   variable ResponseEntity
  location: class AuthController
authcontroller.java:48: error: cannot find symbol
        return ResponseEntity.ok(userService.getUser(userId));
               ^
  symbol:   variable ResponseEntity
  location: class AuthController
service.java:49: error: cannot find symbol
        return userRepository.save(user);
                             ^
  symbol:   method save(User)
  location: variable userRepository of type UserRepository
service.java:57: error: cannot find symbol
        User user = userRepository.findById(id)
                                  ^
  symbol:   method findById(Long)
  location: variable userRepository of type UserRepository
jst.java:20: error: cannot find symbol
                .signWith(SignatureAlgorithm.HS512, jwtSecret)
                          ^
  symbol:   variable SignatureAlgorithm
  location: class JwtService
jst.java:16: error: cannot find symbol
        return Jwts.builder()
               ^
  symbol:   variable Jwts
  location: class JwtService
jst.java:25: error: cannot find symbol
        return Long.parseLong(Jwts.parser().setSigningKey(jwtSecret).parseClaimsJws(token).getBody().getSubject());
                              ^
  symbol:   variable Jwts
  location: class JwtService
jst.java:30: error: cannot find symbol
            Jwts.parser().setSigningKey(jwtSecret).parseClaimsJws(token);
            ^
  symbol:   variable Jwts
  location: class JwtService
config.java:22: error: method does not override or implement a method from a supertype
    @Override
    ^
config.java:30: error: cannot find symbol
                UsernamePasswordAuthenticationToken authentication = new UsernamePasswordAuthenticationToken(
                ^
  symbol:   class UsernamePasswordAuthenticationToken
  location: class JwtAuthenticationFilter
config.java:30: error: cannot find symbol
                UsernamePasswordAuthenticationToken authentication = new UsernamePasswordAuthenticationToken(
                                                                         ^
  symbol:   class UsernamePasswordAuthenticationToken
  location: class JwtAuthenticationFilter
config.java:32: error: cannot find symbol
                authentication.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));
                                              ^
  symbol:   class WebAuthenticationDetailsSource
  location: class JwtAuthenticationFilter
config.java:33: error: cannot find symbol
                SecurityContextHolder.getContext().setAuthentication(authentication);
                ^
  symbol:   variable SecurityContextHolder
  location: class JwtAuthenticationFilter
105 errors