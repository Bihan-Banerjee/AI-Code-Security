name: Full Security Audit

on:
  push:
    branches: [main]
  pull_request:

jobs:
  security-audit:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
    # ✅ 1. Checkout code
    - name: Checkout code
      uses: actions/checkout@v4

    # ✅ 2. Setup Java (for Sonar & Dependency-Check)
    - name: Set up Java 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    # ✅ 3. Setup Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    # ✅ 4. Install Dependencies
    - name: Install Python & JS dependencies (optional)
      run: |
        pip install bandit
        pip install -r requirements.txt || true
        npm install || true

    # ✅ 5. Run Semgrep
    - name: Run Semgrep
      uses: returntocorp/semgrep-action@v1
      with:
        config: 'p/default' # or p/java + p/python + p/javascript
      continue-on-error: true

    # ✅ 6. Run Bandit (Python vulnerabilities)
    - name: Run Bandit on Python code
      run: bandit -r . -f json -o bandit-report.json || true

    # ✅ 7. Run TruffleHog (Secret scanning)
    - name: Run TruffleHog
      uses: trufflesecurity/trufflehog@main
      with:
        scanArguments: '--json .'
      continue-on-error: true

    # ✅ 8. Run OWASP Dependency-Check
    - name: Run OWASP Dependency-Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: "AI-Code-Security"
        format: "HTML"
        out: "reports"
      continue-on-error: true

    # ✅ 9. Run SonarCloud Scan
    - name: SonarCloud Scan
      uses: SonarSource/sonarqube-scan-action@v5.0.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
